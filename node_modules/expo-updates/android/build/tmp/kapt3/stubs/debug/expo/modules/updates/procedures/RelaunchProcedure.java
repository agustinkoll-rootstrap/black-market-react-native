package expo.modules.updates.procedures;

@kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000z\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\u0018\u0000 +2\u00020\u0001:\u0001+B\u0086\u0001\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u000e\u0010\u0004\u001a\n\u0012\u0004\u0012\u00020\u0006\u0018\u00010\u0005\u0012\u0006\u0010\u0007\u001a\u00020\b\u0012\u0006\u0010\t\u001a\u00020\n\u0012\u0006\u0010\u000b\u001a\u00020\f\u0012\u0006\u0010\r\u001a\u00020\u000e\u0012\u0006\u0010\u000f\u001a\u00020\u0010\u0012\f\u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00130\u0012\u0012!\u0010\u0014\u001a\u001d\u0012\u0013\u0012\u00110\u0013\u00a2\u0006\f\b\u0016\u0012\b\b\u0017\u0012\u0004\b\b(\u0018\u0012\u0004\u0012\u00020\u00190\u0015\u0012\u0006\u0010\u001a\u001a\u00020\u001b\u0012\u0006\u0010\u001c\u001a\u00020\u001d\u00a2\u0006\u0002\u0010\u001eJ\u0018\u0010#\u001a\u00020\u00192\u0006\u0010$\u001a\u00020%2\u0006\u0010&\u001a\u00020 H\u0002J\u0010\u0010\'\u001a\u00020\u00192\u0006\u0010(\u001a\u00020)H\u0016J\b\u0010*\u001a\u00020\u0019H\u0002R\u000e\u0010\u001c\u001a\u00020\u001dX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\t\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\r\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00130\u0012X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u001f\u001a\u00020 X\u0096D\u00a2\u0006\b\n\u0000\u001a\u0004\b!\u0010\"R\u000e\u0010\u000f\u001a\u00020\u0010X\u0082\u0004\u00a2\u0006\u0002\n\u0000R)\u0010\u0014\u001a\u001d\u0012\u0013\u0012\u00110\u0013\u00a2\u0006\f\b\u0016\u0012\b\b\u0017\u0012\u0004\b\b(\u0018\u0012\u0004\u0012\u00020\u00190\u0015X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001a\u001a\u00020\u001bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000b\u001a\u00020\fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0016\u0010\u0004\u001a\n\u0012\u0004\u0012\u00020\u0006\u0018\u00010\u0005X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006,"}, d2 = {"Lexpo/modules/updates/procedures/RelaunchProcedure;", "Lexpo/modules/updates/procedures/StateMachineProcedure;", "context", "Landroid/content/Context;", "weakActivity", "Ljava/lang/ref/WeakReference;", "Landroid/app/Activity;", "updatesConfiguration", "Lexpo/modules/updates/UpdatesConfiguration;", "databaseHolder", "Lexpo/modules/updates/db/DatabaseHolder;", "updatesDirectory", "Ljava/io/File;", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "selectionPolicy", "Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "getCurrentLauncher", "Lkotlin/Function0;", "Lexpo/modules/updates/launcher/Launcher;", "setCurrentLauncher", "Lkotlin/Function1;", "Lkotlin/ParameterName;", "name", "launcher", "", "shouldRunReaper", "", "callback", "Lexpo/modules/updates/launcher/Launcher$LauncherCallback;", "(Landroid/content/Context;Ljava/lang/ref/WeakReference;Lexpo/modules/updates/UpdatesConfiguration;Lexpo/modules/updates/db/DatabaseHolder;Ljava/io/File;Lexpo/modules/updates/loader/FileDownloader;Lexpo/modules/updates/selectionpolicy/SelectionPolicy;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ZLexpo/modules/updates/launcher/Launcher$LauncherCallback;)V", "loggerTimerLabel", "", "getLoggerTimerLabel", "()Ljava/lang/String;", "replaceLaunchAssetFileIfNeeded", "reactApplication", "Lcom/facebook/react/ReactApplication;", "launchAssetFile", "run", "procedureContext", "Lexpo/modules/updates/procedures/StateMachineProcedure$ProcedureContext;", "runReaper", "Companion", "expo-updates_debug"})
public final class RelaunchProcedure extends expo.modules.updates.procedures.StateMachineProcedure {
    @org.jetbrains.annotations.NotNull()
    private final android.content.Context context = null;
    @org.jetbrains.annotations.Nullable()
    private final java.lang.ref.WeakReference<android.app.Activity> weakActivity = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.UpdatesConfiguration updatesConfiguration = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.db.DatabaseHolder databaseHolder = null;
    @org.jetbrains.annotations.NotNull()
    private final java.io.File updatesDirectory = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.loader.FileDownloader fileDownloader = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy = null;
    @org.jetbrains.annotations.NotNull()
    private final kotlin.jvm.functions.Function0<expo.modules.updates.launcher.Launcher> getCurrentLauncher = null;
    @org.jetbrains.annotations.NotNull()
    private final kotlin.jvm.functions.Function1<expo.modules.updates.launcher.Launcher, kotlin.Unit> setCurrentLauncher = null;
    private final boolean shouldRunReaper = false;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.launcher.Launcher.LauncherCallback callback = null;
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String loggerTimerLabel = "timer-relaunch";
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.procedures.RelaunchProcedure.Companion Companion = null;
    
    public RelaunchProcedure(@org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.Nullable()
    java.lang.ref.WeakReference<android.app.Activity> weakActivity, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration updatesConfiguration, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.DatabaseHolder databaseHolder, @org.jetbrains.annotations.NotNull()
    java.io.File updatesDirectory, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.loader.FileDownloader fileDownloader, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function0<? extends expo.modules.updates.launcher.Launcher> getCurrentLauncher, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function1<? super expo.modules.updates.launcher.Launcher, kotlin.Unit> setCurrentLauncher, boolean shouldRunReaper, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.launcher.Launcher.LauncherCallback callback) {
        super();
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public java.lang.String getLoggerTimerLabel() {
        return null;
    }
    
    @java.lang.Override()
    public void run(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.procedures.StateMachineProcedure.ProcedureContext procedureContext) {
    }
    
    private final void runReaper() {
    }
    
    /**
     * For bridgeless mode, the restarting will pull the new [JSBundleLoader]
     * based on the new [DatabaseLauncher] through the [ReactNativeHostHandler].
     * So this method is a no-op for bridgeless mode.
     *
     * For bridge mode unfortunately, even though RN exposes a way to reload an application,
     * it assumes that the JS bundle will stay at the same location throughout
     * the entire lifecycle of the app. To change the location of the bundle,
     * we need to use reflection to set an inaccessible field in the
     * [com.facebook.react.ReactInstanceManager].
     */
    private final void replaceLaunchAssetFileIfNeeded(com.facebook.react.ReactApplication reactApplication, java.lang.String launchAssetFile) {
    }
    
    @kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/procedures/RelaunchProcedure$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}