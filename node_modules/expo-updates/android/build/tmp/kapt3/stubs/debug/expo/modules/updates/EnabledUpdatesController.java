package expo.modules.updates;

/**
 * Updates controller for applications that have updates enabled and properly-configured.
 */
@kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u00e4\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010$\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\u0018\u0000 h2\u00020\u00012\u00020\u0002:\u0001hB\u001d\u0012\u0006\u0010\u0003\u001a\u00020\u0004\u0012\u0006\u0010\u0005\u001a\u00020\u0006\u0012\u0006\u0010\u0007\u001a\u00020\b\u00a2\u0006\u0002\u0010\tJ\u0016\u0010A\u001a\u00020B2\f\u0010C\u001a\b\u0012\u0004\u0012\u00020E0DH\u0016J\u0016\u0010F\u001a\u00020B2\f\u0010C\u001a\b\u0012\u0004\u0012\u00020G0DH\u0016J\b\u0010H\u001a\u00020IH\u0016J\u0016\u0010J\u001a\u00020B2\f\u0010C\u001a\b\u0012\u0004\u0012\u00020K0DH\u0016J\u0016\u0010L\u001a\u00020B2\f\u0010C\u001a\b\u0012\u0004\u0012\u00020M0DH\u0016J\u0010\u0010N\u001a\u00020B2\u0006\u0010O\u001a\u00020PH\u0016J\u0010\u0010Q\u001a\u00020B2\u0006\u0010R\u001a\u00020SH\u0016J\u0014\u0010T\u001a\u00020B2\n\u0010U\u001a\u00060Vj\u0002`WH\u0016J\b\u0010X\u001a\u00020BH\u0002J\b\u0010Y\u001a\u00020BH\u0002J\u0018\u0010Z\u001a\u00020B2\u0006\u0010[\u001a\u00020 2\u0006\u0010C\u001a\u00020\\H\u0002J\u0016\u0010]\u001a\u00020B2\f\u0010C\u001a\b\u0012\u0004\u0012\u00020B0DH\u0016J\"\u0010^\u001a\u00020B2\u0006\u0010_\u001a\u00020\u00122\u0006\u0010`\u001a\u00020\u00122\b\u0010a\u001a\u0004\u0018\u00010bH\u0002J\u0018\u0010c\u001a\u00020B2\u0006\u0010`\u001a\u00020d2\u0006\u0010\u0003\u001a\u00020MH\u0016J(\u0010e\u001a\u00020B2\u0006\u0010f\u001a\u00020\u00122\b\u00104\u001a\u0004\u0018\u00010\u00122\f\u0010C\u001a\b\u0012\u0004\u0012\u00020B0DH\u0016J\b\u0010g\u001a\u00020BH\u0016R\"\u0010\n\u001a\n\u0012\u0004\u0012\u00020\f\u0018\u00010\u000bX\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\r\u0010\u000e\"\u0004\b\u000f\u0010\u0010R\u0016\u0010\u0011\u001a\u0004\u0018\u00010\u00128VX\u0096\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0013\u0010\u0014R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0015\u001a\u00020\u0016X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u001c\u0010\u0017\u001a\u0004\u0018\u00010\u0018X\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0019\u0010\u001a\"\u0004\b\u001b\u0010\u001cR\u000e\u0010\u001d\u001a\u00020\u001eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u001f\u001a\u00020 X\u0096D\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001f\u0010!R\u000e\u0010\"\u001a\u00020 X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010#\u001a\u00020 X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010$\u001a\u00020 8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b$\u0010!R\u0016\u0010%\u001a\u0004\u0018\u00010\u00128VX\u0096\u0004\u00a2\u0006\u0006\u001a\u0004\b&\u0010\u0014R\u0016\u0010\'\u001a\u0004\u0018\u00010(8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b)\u0010*R\"\u0010+\u001a\u0010\u0012\u0004\u0012\u00020-\u0012\u0004\u0012\u00020\u0012\u0018\u00010,8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b.\u0010/R\u000e\u00100\u001a\u000201X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u00102\u001a\u000203X\u0082\u0004\u00a2\u0006\u0002\n\u0000R$\u00105\u001a\u00020 2\u0006\u00104\u001a\u00020 @VX\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b6\u0010!\"\u0004\b7\u00108R\u000e\u00109\u001a\u00020:X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010;\u001a\u00020<X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0007\u001a\u00020\bX\u0096\u0004\u00a2\u0006\b\n\u0000\u001a\u0004\b=\u0010>R\u0016\u0010?\u001a\n\u0012\u0004\u0012\u00020@\u0018\u00010\u000bX\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u0006i"}, d2 = {"Lexpo/modules/updates/EnabledUpdatesController;", "Lexpo/modules/updates/IUpdatesController;", "Lexpo/modules/updates/statemachine/UpdatesStateChangeEventSender;", "context", "Landroid/content/Context;", "updatesConfiguration", "Lexpo/modules/updates/UpdatesConfiguration;", "updatesDirectory", "Ljava/io/File;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Ljava/io/File;)V", "appContext", "Ljava/lang/ref/WeakReference;", "Lexpo/modules/kotlin/AppContext;", "getAppContext", "()Ljava/lang/ref/WeakReference;", "setAppContext", "(Ljava/lang/ref/WeakReference;)V", "bundleAssetName", "", "getBundleAssetName", "()Ljava/lang/String;", "databaseHolder", "Lexpo/modules/updates/db/DatabaseHolder;", "eventEmitter", "Lexpo/modules/kotlin/events/EventEmitter;", "getEventEmitter", "()Lexpo/modules/kotlin/events/EventEmitter;", "setEventEmitter", "(Lexpo/modules/kotlin/events/EventEmitter;)V", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "isActiveController", "", "()Z", "isStarted", "isStartupFinished", "isUsingEmbeddedAssets", "launchAssetFile", "getLaunchAssetFile", "launchedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "getLaunchedUpdate", "()Lexpo/modules/updates/db/entity/UpdateEntity;", "localAssetFiles", "", "Lexpo/modules/updates/db/entity/AssetEntity;", "getLocalAssetFiles", "()Ljava/util/Map;", "logger", "Lexpo/modules/updates/logging/UpdatesLogger;", "selectionPolicy", "Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "value", "shouldEmitJsEvents", "getShouldEmitJsEvents", "setShouldEmitJsEvents", "(Z)V", "startupProcedure", "Lexpo/modules/updates/procedures/StartupProcedure;", "stateMachine", "Lexpo/modules/updates/statemachine/UpdatesStateMachine;", "getUpdatesDirectory", "()Ljava/io/File;", "weakActivity", "Landroid/app/Activity;", "checkForUpdate", "", "callback", "Lexpo/modules/updates/IUpdatesController$ModuleCallback;", "Lexpo/modules/updates/IUpdatesController$CheckForUpdateResult;", "fetchUpdate", "Lexpo/modules/updates/IUpdatesController$FetchUpdateResult;", "getConstantsForModule", "Lexpo/modules/updates/IUpdatesController$UpdatesModuleConstants;", "getExtraParams", "Landroid/os/Bundle;", "getNativeStateMachineContext", "Lexpo/modules/updates/statemachine/UpdatesStateContext;", "onDidCreateDevSupportManager", "devSupportManager", "Lcom/facebook/react/devsupport/interfaces/DevSupportManager;", "onDidCreateReactInstance", "reactContext", "Lcom/facebook/react/bridge/ReactContext;", "onReactInstanceException", "exception", "Ljava/lang/Exception;", "Lkotlin/Exception;", "onStartupProcedureFinished", "purgeUpdatesLogsOlderThanOneDay", "relaunchReactApplication", "shouldRunReaper", "Lexpo/modules/updates/launcher/Launcher$LauncherCallback;", "relaunchReactApplicationForModule", "sendEventToJS", "eventName", "eventType", "params", "Lcom/facebook/react/bridge/WritableMap;", "sendUpdateStateChangeEventToAppContext", "Lexpo/modules/updates/statemachine/UpdatesStateEventType;", "setExtraParam", "key", "start", "Companion", "expo-updates_debug"})
public final class EnabledUpdatesController implements expo.modules.updates.IUpdatesController, expo.modules.updates.statemachine.UpdatesStateChangeEventSender {
    @org.jetbrains.annotations.NotNull()
    private final android.content.Context context = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.UpdatesConfiguration updatesConfiguration = null;
    @org.jetbrains.annotations.NotNull()
    private final java.io.File updatesDirectory = null;
    @org.jetbrains.annotations.Nullable()
    private java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> appContext;
    @org.jetbrains.annotations.Nullable()
    private expo.modules.kotlin.events.EventEmitter eventEmitter;
    
    /**
     * Keep the activity for [RelaunchProcedure] to relaunch the app.
     */
    @org.jetbrains.annotations.Nullable()
    private java.lang.ref.WeakReference<android.app.Activity> weakActivity;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.logging.UpdatesLogger logger = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.loader.FileDownloader fileDownloader = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.statemachine.UpdatesStateMachine stateMachine = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.db.DatabaseHolder databaseHolder = null;
    private boolean isStarted = false;
    private boolean isStartupFinished = false;
    private boolean shouldEmitJsEvents = false;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.procedures.StartupProcedure startupProcedure = null;
    private final boolean isActiveController = true;
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.EnabledUpdatesController.Companion Companion = null;
    
    public EnabledUpdatesController(@org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration updatesConfiguration, @org.jetbrains.annotations.NotNull()
    java.io.File updatesDirectory) {
        super();
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public java.io.File getUpdatesDirectory() {
        return null;
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> getAppContext() {
        return null;
    }
    
    @java.lang.Override()
    public void setAppContext(@org.jetbrains.annotations.Nullable()
    java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> p0) {
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public expo.modules.kotlin.events.EventEmitter getEventEmitter() {
        return null;
    }
    
    @java.lang.Override()
    public void setEventEmitter(@org.jetbrains.annotations.Nullable()
    expo.modules.kotlin.events.EventEmitter p0) {
    }
    
    private final void purgeUpdatesLogsOlderThanOneDay() {
    }
    
    @java.lang.Override()
    public boolean getShouldEmitJsEvents() {
        return false;
    }
    
    @java.lang.Override()
    public void setShouldEmitJsEvents(boolean value) {
    }
    
    @kotlin.jvm.Synchronized()
    private final synchronized void onStartupProcedureFinished() {
    }
    
    private final expo.modules.updates.db.entity.UpdateEntity getLaunchedUpdate() {
        return null;
    }
    
    private final boolean isUsingEmbeddedAssets() {
        return false;
    }
    
    private final java.util.Map<expo.modules.updates.db.entity.AssetEntity, java.lang.String> getLocalAssetFiles() {
        return null;
    }
    
    @java.lang.Override()
    @kotlin.jvm.Synchronized()
    @org.jetbrains.annotations.Nullable()
    public synchronized java.lang.String getLaunchAssetFile() {
        return null;
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public java.lang.String getBundleAssetName() {
        return null;
    }
    
    @java.lang.Override()
    public void onDidCreateDevSupportManager(@org.jetbrains.annotations.NotNull()
    com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager) {
    }
    
    @java.lang.Override()
    public void onDidCreateReactInstance(@org.jetbrains.annotations.NotNull()
    com.facebook.react.bridge.ReactContext reactContext) {
    }
    
    @java.lang.Override()
    public void onReactInstanceException(@org.jetbrains.annotations.NotNull()
    java.lang.Exception exception) {
    }
    
    @java.lang.Override()
    public boolean isActiveController() {
        return false;
    }
    
    @java.lang.Override()
    @kotlin.jvm.Synchronized()
    public synchronized void start() {
    }
    
    private final void relaunchReactApplication(boolean shouldRunReaper, expo.modules.updates.launcher.Launcher.LauncherCallback callback) {
    }
    
    @java.lang.Override()
    public void sendUpdateStateChangeEventToAppContext(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.statemachine.UpdatesStateEventType eventType, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.statemachine.UpdatesStateContext context) {
    }
    
    private final void sendEventToJS(java.lang.String eventName, java.lang.String eventType, com.facebook.react.bridge.WritableMap params) {
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public expo.modules.updates.IUpdatesController.UpdatesModuleConstants getConstantsForModule() {
        return null;
    }
    
    @java.lang.Override()
    public void relaunchReactApplicationForModule(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<kotlin.Unit> callback) {
    }
    
    @java.lang.Override()
    public void getNativeStateMachineContext(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.statemachine.UpdatesStateContext> callback) {
    }
    
    @java.lang.Override()
    public void checkForUpdate(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.IUpdatesController.CheckForUpdateResult> callback) {
    }
    
    @java.lang.Override()
    public void fetchUpdate(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.IUpdatesController.FetchUpdateResult> callback) {
    }
    
    @java.lang.Override()
    public void getExtraParams(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<android.os.Bundle> callback) {
    }
    
    @java.lang.Override()
    public void setExtraParam(@org.jetbrains.annotations.NotNull()
    java.lang.String key, @org.jetbrains.annotations.Nullable()
    java.lang.String value, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<kotlin.Unit> callback) {
    }
    
    @kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/EnabledUpdatesController$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}