package expo.modules.updates;

/**
 * Main entry point to expo-updates in development builds with expo-dev-client. Similar to EnabledUpdatesController
 * in that it keeps track of updates state, but provides capabilities that are not usually exposed but
 * that expo-dev-client needs (launching and downloading a specific
 * update by URL, allowing dynamic configuration, introspecting the database). The behavior of this
 * class differs enough that it is implemented independently from EnabledUpdatesController.
 *
 * Implements the external UpdatesInterface from the expo-updates-interface package. This allows
 * expo-dev-client to compile without needing expo-updates to be installed.
 */
@kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u00dc\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010$\n\u0002\u0018\u0002\n\u0002\b\u000f\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0011\u0018\u0000 r2\u00020\u00012\u00020\u0002:\u0002rsB1\u0012\u0006\u0010\u0003\u001a\u00020\u0004\u0012\b\u0010\u0005\u001a\u0004\u0018\u00010\u0006\u0012\b\u0010\u0007\u001a\u0004\u0018\u00010\b\u0012\u000e\u0010\t\u001a\n\u0018\u00010\nj\u0004\u0018\u0001`\u000b\u00a2\u0006\u0002\u0010\fJ\u0016\u0010C\u001a\u00020D2\f\u0010E\u001a\b\u0012\u0004\u0012\u00020G0FH\u0016J4\u0010H\u001a\u00020\u00062\"\u0010I\u001a\u001e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020K0Jj\u000e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020K`L2\u0006\u0010\u0003\u001a\u00020\u0004H\u0002J\u0016\u0010M\u001a\u00020D2\f\u0010E\u001a\b\u0012\u0004\u0012\u00020N0FH\u0016J<\u0010O\u001a\u00020D2\"\u0010I\u001a\u001e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020K0Jj\u000e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020K`L2\u0006\u0010\u0003\u001a\u00020\u00042\u0006\u0010E\u001a\u00020PH\u0016J\b\u0010Q\u001a\u00020RH\u0016J\b\u0010S\u001a\u00020TH\u0002J\u0016\u0010U\u001a\u00020D2\f\u0010E\u001a\b\u0012\u0004\u0012\u00020V0FH\u0016J\u0016\u0010W\u001a\u00020D2\f\u0010E\u001a\b\u0012\u0004\u0012\u00020X0FH\u0016J4\u0010Y\u001a\u00020#2\"\u0010I\u001a\u001e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020K0Jj\u000e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020K`L2\u0006\u0010\u0003\u001a\u00020\u0004H\u0016J0\u0010Z\u001a\u00020D2\u0006\u0010[\u001a\u00020)2\u0006\u0010I\u001a\u00020\u00062\u0006\u0010\\\u001a\u00020]2\u0006\u0010\u0003\u001a\u00020\u00042\u0006\u0010E\u001a\u00020PH\u0002J\u0010\u0010^\u001a\u00020D2\u0006\u0010_\u001a\u00020`H\u0016J\u0010\u0010a\u001a\u00020D2\u0006\u0010b\u001a\u00020cH\u0016J\u0010\u0010d\u001a\u00020D2\u0006\u0010e\u001a\u00020\nH\u0016J\u0016\u0010f\u001a\u00020D2\f\u0010E\u001a\b\u0012\u0004\u0012\u00020D0FH\u0016J\b\u0010g\u001a\u00020DH\u0002J\b\u0010h\u001a\u00020DH\u0016J\b\u0010i\u001a\u00020DH\u0002J\b\u0010j\u001a\u00020DH\u0002J\u0010\u0010k\u001a\u00020D2\u0006\u00105\u001a\u00020\u001bH\u0002J\b\u0010l\u001a\u00020DH\u0002J(\u0010m\u001a\u00020D2\u0006\u0010n\u001a\u00020\u00152\b\u0010o\u001a\u0004\u0018\u00010\u00152\f\u0010E\u001a\b\u0012\u0004\u0012\u00020D0FH\u0016J\u0012\u0010p\u001a\u00020D2\b\u00105\u001a\u0004\u0018\u00010\u001bH\u0002J\b\u0010q\u001a\u00020DH\u0016R\"\u0010\r\u001a\n\u0012\u0004\u0012\u00020\u000f\u0018\u00010\u000eX\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0010\u0010\u0011\"\u0004\b\u0012\u0010\u0013R\u0014\u0010\u0014\u001a\u00020\u00158VX\u0096\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0016\u0010\u0017R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0018\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001a\u001a\u00020\u001bX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u001c\u0010\u001c\u001a\u0004\u0018\u00010\u001dX\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u001e\u0010\u001f\"\u0004\b \u0010!R\u0014\u0010\"\u001a\u00020#X\u0096D\u00a2\u0006\b\n\u0000\u001a\u0004\b\"\u0010$R\u0014\u0010%\u001a\u00020#8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b%\u0010$R\u0014\u0010&\u001a\u00020\u00158VX\u0096\u0004\u00a2\u0006\u0006\u001a\u0004\b\'\u0010\u0017R\u0013\u0010(\u001a\u0004\u0018\u00010)8F\u00a2\u0006\u0006\u001a\u0004\b*\u0010+R\u0010\u0010,\u001a\u0004\u0018\u00010-X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\"\u0010.\u001a\u0010\u0012\u0004\u0012\u000200\u0012\u0004\u0012\u00020\u0015\u0018\u00010/8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b1\u00102R\u0010\u00103\u001a\u0004\u0018\u00010\u001bX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u00104\u001a\u0004\u0018\u00010\u0006X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u00105\u001a\u00020\u001b8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b6\u00107R\u001a\u00108\u001a\u00020#X\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b9\u0010$\"\u0004\b:\u0010;R\u0010\u0010<\u001a\u0004\u0018\u00010\u0006X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0016\u0010\u0007\u001a\u0004\u0018\u00010\bX\u0096\u0004\u00a2\u0006\b\n\u0000\u001a\u0004\b=\u0010>R\u0016\u0010\t\u001a\n\u0018\u00010\nj\u0004\u0018\u0001`\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\"\u0010?\u001a\n\u0012\u0004\u0012\u00020@\u0018\u00010\u000eX\u0096\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bA\u0010\u0011\"\u0004\bB\u0010\u0013\u00a8\u0006t"}, d2 = {"Lexpo/modules/updates/UpdatesDevLauncherController;", "Lexpo/modules/updates/IUpdatesController;", "Lexpo/modules/updatesinterface/UpdatesInterface;", "context", "Landroid/content/Context;", "initialUpdatesConfiguration", "Lexpo/modules/updates/UpdatesConfiguration;", "updatesDirectory", "Ljava/io/File;", "updatesDirectoryException", "Ljava/lang/Exception;", "Lkotlin/Exception;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Ljava/io/File;Ljava/lang/Exception;)V", "appContext", "Ljava/lang/ref/WeakReference;", "Lexpo/modules/kotlin/AppContext;", "getAppContext", "()Ljava/lang/ref/WeakReference;", "setAppContext", "(Ljava/lang/ref/WeakReference;)V", "bundleAssetName", "", "getBundleAssetName", "()Ljava/lang/String;", "databaseHolder", "Lexpo/modules/updates/db/DatabaseHolder;", "defaultSelectionPolicy", "Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "eventEmitter", "Lexpo/modules/kotlin/events/EventEmitter;", "getEventEmitter", "()Lexpo/modules/kotlin/events/EventEmitter;", "setEventEmitter", "(Lexpo/modules/kotlin/events/EventEmitter;)V", "isActiveController", "", "()Z", "isUsingEmbeddedAssets", "launchAssetFile", "getLaunchAssetFile", "launchedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "getLaunchedUpdate", "()Lexpo/modules/updates/db/entity/UpdateEntity;", "launcher", "Lexpo/modules/updates/launcher/Launcher;", "localAssetFiles", "", "Lexpo/modules/updates/db/entity/AssetEntity;", "getLocalAssetFiles", "()Ljava/util/Map;", "mSelectionPolicy", "previousUpdatesConfiguration", "selectionPolicy", "getSelectionPolicy", "()Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "shouldEmitJsEvents", "getShouldEmitJsEvents", "setShouldEmitJsEvents", "(Z)V", "updatesConfiguration", "getUpdatesDirectory", "()Ljava/io/File;", "updatesInterfaceCallbacks", "Lexpo/modules/updatesinterface/UpdatesInterfaceCallbacks;", "getUpdatesInterfaceCallbacks", "setUpdatesInterfaceCallbacks", "checkForUpdate", "", "callback", "Lexpo/modules/updates/IUpdatesController$ModuleCallback;", "Lexpo/modules/updates/IUpdatesController$CheckForUpdateResult;", "createUpdatesConfiguration", "configuration", "Ljava/util/HashMap;", "", "Lkotlin/collections/HashMap;", "fetchUpdate", "Lexpo/modules/updates/IUpdatesController$FetchUpdateResult;", "fetchUpdateWithConfiguration", "Lexpo/modules/updatesinterface/UpdatesInterface$UpdateCallback;", "getConstantsForModule", "Lexpo/modules/updates/IUpdatesController$UpdatesModuleConstants;", "getDatabase", "Lexpo/modules/updates/db/UpdatesDatabase;", "getExtraParams", "Landroid/os/Bundle;", "getNativeStateMachineContext", "Lexpo/modules/updates/statemachine/UpdatesStateContext;", "isValidUpdatesConfiguration", "launchUpdate", "update", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "onDidCreateDevSupportManager", "devSupportManager", "Lcom/facebook/react/devsupport/interfaces/DevSupportManager;", "onDidCreateReactInstance", "reactContext", "Lcom/facebook/react/bridge/ReactContext;", "onReactInstanceException", "exception", "relaunchReactApplicationForModule", "releaseDatabase", "reset", "resetSelectionPolicyToDefault", "runReaper", "setDefaultSelectionPolicy", "setDevelopmentSelectionPolicy", "setExtraParam", "key", "value", "setNextSelectionPolicy", "start", "Companion", "NotAvailableInDevClientException", "expo-updates_debug"})
public final class UpdatesDevLauncherController implements expo.modules.updates.IUpdatesController, expo.modules.updatesinterface.UpdatesInterface {
    @org.jetbrains.annotations.NotNull()
    private final android.content.Context context = null;
    @org.jetbrains.annotations.Nullable()
    private final java.io.File updatesDirectory = null;
    @org.jetbrains.annotations.Nullable()
    private final java.lang.Exception updatesDirectoryException = null;
    @org.jetbrains.annotations.Nullable()
    private java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> appContext;
    @org.jetbrains.annotations.Nullable()
    private expo.modules.kotlin.events.EventEmitter eventEmitter;
    private boolean shouldEmitJsEvents = false;
    @org.jetbrains.annotations.Nullable()
    private java.lang.ref.WeakReference<expo.modules.updatesinterface.UpdatesInterfaceCallbacks> updatesInterfaceCallbacks;
    @org.jetbrains.annotations.Nullable()
    private expo.modules.updates.launcher.Launcher launcher;
    @org.jetbrains.annotations.Nullable()
    private expo.modules.updates.UpdatesConfiguration previousUpdatesConfiguration;
    @org.jetbrains.annotations.Nullable()
    private expo.modules.updates.UpdatesConfiguration updatesConfiguration;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.db.DatabaseHolder databaseHolder = null;
    @org.jetbrains.annotations.Nullable()
    private expo.modules.updates.selectionpolicy.SelectionPolicy mSelectionPolicy;
    @org.jetbrains.annotations.NotNull()
    private expo.modules.updates.selectionpolicy.SelectionPolicy defaultSelectionPolicy;
    private final boolean isActiveController = false;
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.UpdatesDevLauncherController.Companion Companion = null;
    
    public UpdatesDevLauncherController(@org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.Nullable()
    expo.modules.updates.UpdatesConfiguration initialUpdatesConfiguration, @org.jetbrains.annotations.Nullable()
    java.io.File updatesDirectory, @org.jetbrains.annotations.Nullable()
    java.lang.Exception updatesDirectoryException) {
        super();
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public java.io.File getUpdatesDirectory() {
        return null;
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> getAppContext() {
        return null;
    }
    
    @java.lang.Override()
    public void setAppContext(@org.jetbrains.annotations.Nullable()
    java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> p0) {
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public expo.modules.kotlin.events.EventEmitter getEventEmitter() {
        return null;
    }
    
    @java.lang.Override()
    public void setEventEmitter(@org.jetbrains.annotations.Nullable()
    expo.modules.kotlin.events.EventEmitter p0) {
    }
    
    @java.lang.Override()
    public boolean getShouldEmitJsEvents() {
        return false;
    }
    
    @java.lang.Override()
    public void setShouldEmitJsEvents(boolean p0) {
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.Nullable()
    public java.lang.ref.WeakReference<expo.modules.updatesinterface.UpdatesInterfaceCallbacks> getUpdatesInterfaceCallbacks() {
        return null;
    }
    
    @java.lang.Override()
    public void setUpdatesInterfaceCallbacks(@org.jetbrains.annotations.Nullable()
    java.lang.ref.WeakReference<expo.modules.updatesinterface.UpdatesInterfaceCallbacks> p0) {
    }
    
    private final expo.modules.updates.selectionpolicy.SelectionPolicy getSelectionPolicy() {
        return null;
    }
    
    private final void setNextSelectionPolicy(expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy) {
    }
    
    private final void resetSelectionPolicyToDefault() {
    }
    
    private final void setDefaultSelectionPolicy(expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy) {
    }
    
    @java.lang.Override()
    @kotlin.jvm.Synchronized()
    @org.jetbrains.annotations.NotNull()
    public synchronized java.lang.String getLaunchAssetFile() {
        return null;
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public java.lang.String getBundleAssetName() {
        return null;
    }
    
    @java.lang.Override()
    public void onDidCreateDevSupportManager(@org.jetbrains.annotations.NotNull()
    com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager) {
    }
    
    @java.lang.Override()
    public void onDidCreateReactInstance(@org.jetbrains.annotations.NotNull()
    com.facebook.react.bridge.ReactContext reactContext) {
    }
    
    @java.lang.Override()
    public void onReactInstanceException(@org.jetbrains.annotations.NotNull()
    java.lang.Exception exception) {
    }
    
    @java.lang.Override()
    public boolean isActiveController() {
        return false;
    }
    
    @java.lang.Override()
    public void start() {
    }
    
    @org.jetbrains.annotations.Nullable()
    public final expo.modules.updates.db.entity.UpdateEntity getLaunchedUpdate() {
        return null;
    }
    
    private final java.util.Map<expo.modules.updates.db.entity.AssetEntity, java.lang.String> getLocalAssetFiles() {
        return null;
    }
    
    private final boolean isUsingEmbeddedAssets() {
        return false;
    }
    
    @java.lang.Override()
    public void reset() {
    }
    
    /**
     * Fetch an update using a dynamically generated configuration object (including a potentially
     * different update URL than the one embedded in the build).
     */
    @java.lang.Override()
    public void fetchUpdateWithConfiguration(@org.jetbrains.annotations.NotNull()
    java.util.HashMap<java.lang.String, java.lang.Object> configuration, @org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.NotNull()
    expo.modules.updatesinterface.UpdatesInterface.UpdateCallback callback) {
    }
    
    @java.lang.Override()
    public boolean isValidUpdatesConfiguration(@org.jetbrains.annotations.NotNull()
    java.util.HashMap<java.lang.String, java.lang.Object> configuration, @org.jetbrains.annotations.NotNull()
    android.content.Context context) {
        return false;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.lang.Exception.class})
    private final expo.modules.updates.UpdatesConfiguration createUpdatesConfiguration(java.util.HashMap<java.lang.String, java.lang.Object> configuration, android.content.Context context) {
        return null;
    }
    
    private final void setDevelopmentSelectionPolicy() {
    }
    
    private final void launchUpdate(expo.modules.updates.db.entity.UpdateEntity update, expo.modules.updates.UpdatesConfiguration configuration, expo.modules.updates.loader.FileDownloader fileDownloader, android.content.Context context, expo.modules.updatesinterface.UpdatesInterface.UpdateCallback callback) {
    }
    
    private final expo.modules.updates.db.UpdatesDatabase getDatabase() {
        return null;
    }
    
    private final void releaseDatabase() {
    }
    
    private final void runReaper() {
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public expo.modules.updates.IUpdatesController.UpdatesModuleConstants getConstantsForModule() {
        return null;
    }
    
    @java.lang.Override()
    public void relaunchReactApplicationForModule(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<kotlin.Unit> callback) {
    }
    
    @java.lang.Override()
    public void getNativeStateMachineContext(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.statemachine.UpdatesStateContext> callback) {
    }
    
    @java.lang.Override()
    public void checkForUpdate(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.IUpdatesController.CheckForUpdateResult> callback) {
    }
    
    @java.lang.Override()
    public void fetchUpdate(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.IUpdatesController.FetchUpdateResult> callback) {
    }
    
    @java.lang.Override()
    public void getExtraParams(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<android.os.Bundle> callback) {
    }
    
    @java.lang.Override()
    public void setExtraParam(@org.jetbrains.annotations.NotNull()
    java.lang.String key, @org.jetbrains.annotations.Nullable()
    java.lang.String value, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.IUpdatesController.ModuleCallback<kotlin.Unit> callback) {
    }
    
    @kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/UpdatesDevLauncherController$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
    
    @kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u0012\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0002\u0018\u00002\u00020\u0001B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004\u00a8\u0006\u0005"}, d2 = {"Lexpo/modules/updates/UpdatesDevLauncherController$NotAvailableInDevClientException;", "Lexpo/modules/kotlin/exception/CodedException;", "message", "", "(Ljava/lang/String;)V", "expo-updates_debug"})
    public static final class NotAvailableInDevClientException extends expo.modules.kotlin.exception.CodedException {
        
        public NotAvailableInDevClientException(@org.jetbrains.annotations.NotNull()
        java.lang.String message) {
            super(null, null, null);
        }
    }
}