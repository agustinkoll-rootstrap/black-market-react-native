package expo.modules.updates;

/**
 * Miscellaneous helper functions that are used by multiple classes in the library.
 */
@kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000\u0090\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u0019\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0010!\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0012\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010$\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\b\u00c6\u0002\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\u000e\u0010\u000e\u001a\u00020\u00062\u0006\u0010\u000f\u001a\u00020\u0010J\u000e\u0010\u0011\u001a\u00020\u00062\u0006\u0010\u0012\u001a\u00020\u0013J\u001a\u0010\u0014\u001a\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u00060\u00152\u0006\u0010\u0016\u001a\u00020\u0006J\u000e\u0010\u0017\u001a\u00020\u00182\u0006\u0010\u0019\u001a\u00020\u001aJ\u0014\u0010\u001b\u001a\b\u0012\u0004\u0012\u00020\u00060\u001c2\u0006\u0010\u0016\u001a\u00020\u0006J\u000e\u0010\u001d\u001a\u00020\u001e2\u0006\u0010\u001f\u001a\u00020\u0006J:\u0010 \u001a\u00020!2\b\u0010\"\u001a\u0004\u0018\u00010#2\u0006\u0010$\u001a\u00020%2\u0006\u0010&\u001a\u00020\'2\u0006\u0010(\u001a\u00020\u00062\u0006\u0010)\u001a\u00020\u00062\b\u0010*\u001a\u0004\u0018\u00010\fJ&\u0010+\u001a\u00020!2\u0006\u0010$\u001a\u00020%2\u000e\u0010,\u001a\n\u0012\u0004\u0012\u00020.\u0018\u00010-2\u0006\u0010&\u001a\u00020\'J\u000e\u0010/\u001a\u00020\u00102\u0006\u00100\u001a\u00020\u0018J\u000e\u0010/\u001a\u00020\u00062\u0006\u00101\u001a\u00020\u0006J\u0016\u00102\u001a\u00020%2\u0006\u00103\u001a\u0002042\u0006\u0010\u0019\u001a\u00020\u001aJ \u00105\u001a\u00020\u00102\u0006\u00106\u001a\u0002072\u0006\u00108\u001a\u00020\u00182\b\u00109\u001a\u0004\u0018\u00010\u0006R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0016\u0010\u0005\u001a\n \u0007*\u0004\u0018\u00010\u00060\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\u0006X\u0082T\u00a2\u0006\u0002\n\u0000R>\u0010\r\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\f0\u000b0\n2\u0018\u0010\t\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\f0\u000b0\n8B@BX\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u0006:"}, d2 = {"Lexpo/modules/updates/UpdatesUtils;", "", "()V", "HEX_ARRAY", "", "TAG", "", "kotlin.jvm.PlatformType", "UPDATES_DIRECTORY_NAME", "<set-?>", "", "Lkotlin/Pair;", "Lcom/facebook/react/bridge/WritableMap;", "eventsToSendToJS", "bytesToHex", "bytes", "", "createFilenameForAsset", "asset", "Lexpo/modules/updates/db/entity/AssetEntity;", "getMapFromJSONString", "", "stringifiedJSON", "getOrCreateUpdatesDirectory", "Ljava/io/File;", "context", "Landroid/content/Context;", "getStringListFromJSONString", "", "parseDateString", "Ljava/util/Date;", "dateString", "sendEvent", "", "eventEmitter", "Lexpo/modules/kotlin/events/EventEmitter;", "shouldEmitJsEvents", "", "logger", "Lexpo/modules/updates/logging/UpdatesLogger;", "eventName", "eventType", "params", "sendQueuedEventsToAppContext", "weakAppContext", "Ljava/lang/ref/WeakReference;", "Lexpo/modules/kotlin/AppContext;", "sha256", "file", "string", "shouldCheckForUpdateOnLaunch", "updatesConfiguration", "Lexpo/modules/updates/UpdatesConfiguration;", "verifySHA256AndWriteToFile", "inputStream", "Ljava/io/InputStream;", "destination", "expectedBase64URLEncodedHash", "expo-updates_debug"})
public final class UpdatesUtils {
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    private static java.util.List<kotlin.Pair<java.lang.String, com.facebook.react.bridge.WritableMap>> eventsToSendToJS;
    @org.jetbrains.annotations.NotNull()
    private static final java.lang.String UPDATES_DIRECTORY_NAME = ".expo-internal";
    @org.jetbrains.annotations.NotNull()
    private static final char[] HEX_ARRAY = null;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.UpdatesUtils INSTANCE = null;
    
    private UpdatesUtils() {
        super();
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.lang.Exception.class})
    @org.jetbrains.annotations.NotNull()
    public final java.util.Map<java.lang.String, java.lang.String> getMapFromJSONString(@org.jetbrains.annotations.NotNull()
    java.lang.String stringifiedJSON) {
        return null;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.lang.Exception.class})
    @org.jetbrains.annotations.NotNull()
    public final java.util.List<java.lang.String> getStringListFromJSONString(@org.jetbrains.annotations.NotNull()
    java.lang.String stringifiedJSON) {
        return null;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.lang.Exception.class})
    @org.jetbrains.annotations.NotNull()
    public final java.io.File getOrCreateUpdatesDirectory(@org.jetbrains.annotations.NotNull()
    android.content.Context context) throws java.lang.Exception {
        return null;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.security.NoSuchAlgorithmException.class, java.io.UnsupportedEncodingException.class})
    @org.jetbrains.annotations.NotNull()
    public final java.lang.String sha256(@org.jetbrains.annotations.NotNull()
    java.lang.String string) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException {
        return null;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.security.NoSuchAlgorithmException.class, java.io.IOException.class})
    @org.jetbrains.annotations.NotNull()
    public final byte[] sha256(@org.jetbrains.annotations.NotNull()
    java.io.File file) throws java.security.NoSuchAlgorithmException, java.io.IOException {
        return null;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.security.NoSuchAlgorithmException.class, java.io.IOException.class})
    @org.jetbrains.annotations.NotNull()
    public final byte[] verifySHA256AndWriteToFile(@org.jetbrains.annotations.NotNull()
    java.io.InputStream inputStream, @org.jetbrains.annotations.NotNull()
    java.io.File destination, @org.jetbrains.annotations.Nullable()
    java.lang.String expectedBase64URLEncodedHash) throws java.security.NoSuchAlgorithmException, java.io.IOException {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final java.lang.String createFilenameForAsset(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.entity.AssetEntity asset) {
        return null;
    }
    
    public final void sendEvent(@org.jetbrains.annotations.Nullable()
    expo.modules.kotlin.events.EventEmitter eventEmitter, boolean shouldEmitJsEvents, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.logging.UpdatesLogger logger, @org.jetbrains.annotations.NotNull()
    java.lang.String eventName, @org.jetbrains.annotations.NotNull()
    java.lang.String eventType, @org.jetbrains.annotations.Nullable()
    com.facebook.react.bridge.WritableMap params) {
    }
    
    public final void sendQueuedEventsToAppContext(boolean shouldEmitJsEvents, @org.jetbrains.annotations.Nullable()
    java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> weakAppContext, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.logging.UpdatesLogger logger) {
    }
    
    public final boolean shouldCheckForUpdateOnLaunch(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration updatesConfiguration, @org.jetbrains.annotations.NotNull()
    android.content.Context context) {
        return false;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final java.lang.String bytesToHex(@org.jetbrains.annotations.NotNull()
    byte[] bytes) {
        return null;
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.text.ParseException.class})
    @org.jetbrains.annotations.NotNull()
    public final java.util.Date parseDateString(@org.jetbrains.annotations.NotNull()
    java.lang.String dateString) throws java.text.ParseException {
        return null;
    }
}