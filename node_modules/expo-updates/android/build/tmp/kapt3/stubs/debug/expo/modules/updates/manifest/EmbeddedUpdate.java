package expo.modules.updates.manifest;

/**
 * Class for bare-bones manifests embedded in application packages. These manifest objects are
 * generated by the script at expo-updates/scripts/createManifest.js and describe the update
 * embedded by react-native in the application package. They contain the minimum amount of
 * information needed to reliably identify the update and insert it into [UpdatesDatabase].
 */
@kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000H\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0005\u0018\u0000 \u001f2\u00020\u0001:\u0001\u001fB9\b\u0002\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\b\u001a\u00020\t\u0012\u0006\u0010\n\u001a\u00020\u0007\u0012\b\u0010\u000b\u001a\u0004\u0018\u00010\f\u00a2\u0006\u0002\u0010\rR!\u0010\u000e\u001a\b\u0012\u0004\u0012\u00020\u00100\u000f8VX\u0096\u0084\u0002\u00a2\u0006\f\n\u0004\b\u0013\u0010\u0014\u001a\u0004\b\u0011\u0010\u0012R\u0010\u0010\u000b\u001a\u0004\u0018\u00010\fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0004\u001a\u00020\u0005X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0015\u001a\u00020\u0016X\u0096D\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0015\u0010\u0017R\u0014\u0010\u0002\u001a\u00020\u0003X\u0096\u0004\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0018\u0010\u0019R\u000e\u0010\n\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0006\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u001b\u0010\u001a\u001a\u00020\u001b8VX\u0096\u0084\u0002\u00a2\u0006\f\n\u0004\b\u001e\u0010\u0014\u001a\u0004\b\u001c\u0010\u001d\u00a8\u0006 "}, d2 = {"Lexpo/modules/updates/manifest/EmbeddedUpdate;", "Lexpo/modules/updates/manifest/Update;", "manifest", "Lexpo/modules/manifests/core/EmbeddedManifest;", "id", "Ljava/util/UUID;", "scopeKey", "", "commitTime", "Ljava/util/Date;", "runtimeVersion", "assets", "Lorg/json/JSONArray;", "(Lexpo/modules/manifests/core/EmbeddedManifest;Ljava/util/UUID;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Lorg/json/JSONArray;)V", "assetEntityList", "", "Lexpo/modules/updates/db/entity/AssetEntity;", "getAssetEntityList", "()Ljava/util/List;", "assetEntityList$delegate", "Lkotlin/Lazy;", "isDevelopmentMode", "", "()Z", "getManifest", "()Lexpo/modules/manifests/core/EmbeddedManifest;", "updateEntity", "Lexpo/modules/updates/db/entity/UpdateEntity;", "getUpdateEntity", "()Lexpo/modules/updates/db/entity/UpdateEntity;", "updateEntity$delegate", "Companion", "expo-updates_debug"})
public final class EmbeddedUpdate implements expo.modules.updates.manifest.Update {
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.manifests.core.EmbeddedManifest manifest = null;
    @org.jetbrains.annotations.NotNull()
    private final java.util.UUID id = null;
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String scopeKey = null;
    @org.jetbrains.annotations.NotNull()
    private final java.util.Date commitTime = null;
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String runtimeVersion = null;
    @org.jetbrains.annotations.Nullable()
    private final org.json.JSONArray assets = null;
    @org.jetbrains.annotations.NotNull()
    private final kotlin.Lazy updateEntity$delegate = null;
    @org.jetbrains.annotations.NotNull()
    private final kotlin.Lazy assetEntityList$delegate = null;
    private final boolean isDevelopmentMode = false;
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.manifest.EmbeddedUpdate.Companion Companion = null;
    
    private EmbeddedUpdate(expo.modules.manifests.core.EmbeddedManifest manifest, java.util.UUID id, java.lang.String scopeKey, java.util.Date commitTime, java.lang.String runtimeVersion, org.json.JSONArray assets) {
        super();
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public expo.modules.manifests.core.EmbeddedManifest getManifest() {
        return null;
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public expo.modules.updates.db.entity.UpdateEntity getUpdateEntity() {
        return null;
    }
    
    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public java.util.List<expo.modules.updates.db.entity.AssetEntity> getAssetEntityList() {
        return null;
    }
    
    @java.lang.Override()
    public boolean isDevelopmentMode() {
        return false;
    }
    
    @kotlin.Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\u0000&\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\u0016\u0010\u0006\u001a\u00020\u00072\u0006\u0010\b\u001a\u00020\t2\u0006\u0010\n\u001a\u00020\u000bR\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/manifest/EmbeddedUpdate$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "fromEmbeddedManifest", "Lexpo/modules/updates/manifest/EmbeddedUpdate;", "manifest", "Lexpo/modules/manifests/core/EmbeddedManifest;", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
        
        @kotlin.jvm.Throws(exceptionClasses = {org.json.JSONException.class})
        @org.jetbrains.annotations.NotNull()
        public final expo.modules.updates.manifest.EmbeddedUpdate fromEmbeddedManifest(@org.jetbrains.annotations.NotNull()
        expo.modules.manifests.core.EmbeddedManifest manifest, @org.jetbrains.annotations.NotNull()
        expo.modules.updates.UpdatesConfiguration configuration) throws org.json.JSONException {
            return null;
        }
    }
}