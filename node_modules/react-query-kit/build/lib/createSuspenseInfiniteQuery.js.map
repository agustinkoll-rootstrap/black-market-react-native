{"version":3,"file":"createSuspenseInfiniteQuery.js","sources":["../../src/createSuspenseInfiniteQuery.ts"],"sourcesContent":["import { createBaseQuery } from './createBaseQuery'\nimport type {\n  CompatibleError,\n  CreateSuspenseInfiniteQueryOptions,\n  SuspenseInfiniteQueryHook,\n} from './types'\nimport { ReactQuery, isV5, suspenseOptions } from './utils'\n\nexport function createSuspenseInfiniteQuery<\n  TFnData,\n  TVariables = void,\n  TError = CompatibleError,\n  TPageParam = number\n>(\n  options: CreateSuspenseInfiniteQueryOptions<\n    TFnData,\n    TVariables,\n    TError,\n    TPageParam\n  >\n): SuspenseInfiniteQueryHook<TFnData, TVariables, TError, TPageParam> {\n  return isV5\n    ? createBaseQuery(options, ReactQuery.useSuspenseInfiniteQuery)\n    : createBaseQuery(options, ReactQuery.useInfiniteQuery, suspenseOptions)\n}\n"],"names":["createSuspenseInfiniteQuery","options","isV5","createBaseQuery","ReactQuery","useSuspenseInfiniteQuery","useInfiniteQuery","suspenseOptions"],"mappings":";;;;;;;AAQO,SAASA,2BAAT,CAMLC,OANK,EAY+D;EACpE,OAAOC,UAAI,GACPC,+BAAe,CAACF,OAAD,EAAUG,gBAAU,CAACC,wBAArB,CADR,GAEPF,+BAAe,CAACF,OAAD,EAAUG,gBAAU,CAACE,gBAArB,EAAuCC,qBAAvC,CAFnB,CAAA;AAGD;;;;"}