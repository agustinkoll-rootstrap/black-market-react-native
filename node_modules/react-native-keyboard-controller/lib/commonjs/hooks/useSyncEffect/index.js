"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
/**
 * @description
 * Equivalent to `useEffect` but will run the effect synchronously, i. e. before render.
 *
 * @param {effect} - imperative function
 * @param {deps} - if present, effect will only activate if the values in the list change
 *
 * @author Kiryl Ziusko
 * @since 1.13.0
 * @version 1.0.0
 */
const useSyncEffect = (effect, deps) => {
  const cachedDeps = (0, _react.useRef)(null);
  const areDepsEqual = deps === null || deps === void 0 ? void 0 : deps.every((el, index) => cachedDeps.current && el === cachedDeps.current[index]);
  const cleanupRef = (0, _react.useRef)();
  if (!areDepsEqual || !cachedDeps.current) {
    var _cleanupRef$current;
    (_cleanupRef$current = cleanupRef.current) === null || _cleanupRef$current === void 0 || _cleanupRef$current.call(cleanupRef);
    cleanupRef.current = effect();
    cachedDeps.current = deps;
  }
  (0, _react.useEffect)(() => {
    return () => {
      var _cleanupRef$current2;
      (_cleanupRef$current2 = cleanupRef.current) === null || _cleanupRef$current2 === void 0 || _cleanupRef$current2.call(cleanupRef);
    };
  }, []);
};
var _default = exports.default = useSyncEffect;
//# sourceMappingURL=index.js.map